{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\New folder\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cartItems: [],\n  subtotal: 0,\n  shipping: 0,\n  total: 0\n};\n\n// Create context\nconst CartContext = /*#__PURE__*/createContext(initialState);\n\n// Cart reducer\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      {\n        const {\n          product,\n          quantity,\n          selectedSize,\n          selectedColor\n        } = action.payload;\n\n        // Check if item already exists in cart with same size and color\n        const existingItemIndex = state.cartItems.findIndex(item => item.id === product.id && item.selectedSize === selectedSize && item.selectedColor === selectedColor);\n        let updatedCartItems;\n        if (existingItemIndex >= 0) {\n          // Update quantity of existing item\n          updatedCartItems = state.cartItems.map((item, index) => {\n            if (index === existingItemIndex) {\n              return {\n                ...item,\n                quantity: item.quantity + quantity\n              };\n            }\n            return item;\n          });\n        } else {\n          // Add new item to cart\n          updatedCartItems = [...state.cartItems, {\n            ...product,\n            quantity,\n            selectedSize,\n            selectedColor\n          }];\n        }\n\n        // Calculate new totals\n        const subtotal = calculateSubtotal(updatedCartItems);\n        const shipping = calculateShipping(subtotal);\n        const total = subtotal + shipping;\n        return {\n          ...state,\n          cartItems: updatedCartItems,\n          subtotal,\n          shipping,\n          total\n        };\n      }\n    case 'REMOVE_FROM_CART':\n      {\n        const updatedCartItems = state.cartItems.filter((item, index) => index !== action.payload.index);\n\n        // Calculate new totals\n        const subtotal = calculateSubtotal(updatedCartItems);\n        const shipping = calculateShipping(subtotal);\n        const total = subtotal + shipping;\n        return {\n          ...state,\n          cartItems: updatedCartItems,\n          subtotal,\n          shipping,\n          total\n        };\n      }\n    case 'UPDATE_QUANTITY':\n      {\n        const {\n          index,\n          quantity\n        } = action.payload;\n\n        // Don't allow quantity less than 1\n        if (quantity < 1) return state;\n        const updatedCartItems = state.cartItems.map((item, i) => {\n          if (i === index) {\n            return {\n              ...item,\n              quantity\n            };\n          }\n          return item;\n        });\n\n        // Calculate new totals\n        const subtotal = calculateSubtotal(updatedCartItems);\n        const shipping = calculateShipping(subtotal);\n        const total = subtotal + shipping;\n        return {\n          ...state,\n          cartItems: updatedCartItems,\n          subtotal,\n          shipping,\n          total\n        };\n      }\n    case 'CLEAR_CART':\n      return {\n        ...initialState\n      };\n    case 'LOAD_CART':\n      return {\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Helper functions\nconst calculateSubtotal = cartItems => {\n  return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n};\nconst calculateShipping = subtotal => {\n  // Free shipping over $150\n  return subtotal >= 150 ? 0 : 10;\n};\n\n// Provider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        dispatch({\n          type: 'LOAD_CART',\n          payload: parsedCart\n        });\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state));\n  }, [state]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1, selectedSize, selectedColor) => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: {\n        product,\n        quantity,\n        selectedSize,\n        selectedColor\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = index => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: {\n        index\n      }\n    });\n  };\n\n  // Update item quantity\n  const updateQuantity = (index, quantity) => {\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        index,\n        quantity\n      }\n    });\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      ...state,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use cart context\n_s(CartProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","cartItems","subtotal","shipping","total","CartContext","cartReducer","state","action","type","product","quantity","selectedSize","selectedColor","payload","existingItemIndex","findIndex","item","id","updatedCartItems","map","index","calculateSubtotal","calculateShipping","filter","i","reduce","price","CartProvider","children","_s","dispatch","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","setItem","stringify","addToCart","removeFromCart","updateQuantity","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/HP/Documents/New folder/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nconst initialState = {\n  cartItems: [],\n  subtotal: 0,\n  shipping: 0,\n  total: 0,\n};\n\n// Create context\nconst CartContext = createContext(initialState);\n\n// Cart reducer\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART': {\n      const { product, quantity, selectedSize, selectedColor } = action.payload;\n      \n      // Check if item already exists in cart with same size and color\n      const existingItemIndex = state.cartItems.findIndex(\n        item => item.id === product.id && item.selectedSize === selectedSize && item.selectedColor === selectedColor\n      );\n      \n      let updatedCartItems;\n      \n      if (existingItemIndex >= 0) {\n        // Update quantity of existing item\n        updatedCartItems = state.cartItems.map((item, index) => {\n          if (index === existingItemIndex) {\n            return { ...item, quantity: item.quantity + quantity };\n          }\n          return item;\n        });\n      } else {\n        // Add new item to cart\n        updatedCartItems = [\n          ...state.cartItems,\n          {\n            ...product,\n            quantity,\n            selectedSize,\n            selectedColor,\n          },\n        ];\n      }\n      \n      // Calculate new totals\n      const subtotal = calculateSubtotal(updatedCartItems);\n      const shipping = calculateShipping(subtotal);\n      const total = subtotal + shipping;\n      \n      return {\n        ...state,\n        cartItems: updatedCartItems,\n        subtotal,\n        shipping,\n        total,\n      };\n    }\n    \n    case 'REMOVE_FROM_CART': {\n      const updatedCartItems = state.cartItems.filter(\n        (item, index) => index !== action.payload.index\n      );\n      \n      // Calculate new totals\n      const subtotal = calculateSubtotal(updatedCartItems);\n      const shipping = calculateShipping(subtotal);\n      const total = subtotal + shipping;\n      \n      return {\n        ...state,\n        cartItems: updatedCartItems,\n        subtotal,\n        shipping,\n        total,\n      };\n    }\n    \n    case 'UPDATE_QUANTITY': {\n      const { index, quantity } = action.payload;\n      \n      // Don't allow quantity less than 1\n      if (quantity < 1) return state;\n      \n      const updatedCartItems = state.cartItems.map((item, i) => {\n        if (i === index) {\n          return { ...item, quantity };\n        }\n        return item;\n      });\n      \n      // Calculate new totals\n      const subtotal = calculateSubtotal(updatedCartItems);\n      const shipping = calculateShipping(subtotal);\n      const total = subtotal + shipping;\n      \n      return {\n        ...state,\n        cartItems: updatedCartItems,\n        subtotal,\n        shipping,\n        total,\n      };\n    }\n    \n    case 'CLEAR_CART':\n      return {\n        ...initialState\n      };\n      \n    case 'LOAD_CART':\n      return {\n        ...action.payload\n      };\n      \n    default:\n      return state;\n  }\n};\n\n// Helper functions\nconst calculateSubtotal = (cartItems) => {\n  return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n};\n\nconst calculateShipping = (subtotal) => {\n  // Free shipping over $150\n  return subtotal >= 150 ? 0 : 10;\n};\n\n// Provider component\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  \n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        dispatch({ type: 'LOAD_CART', payload: parsedCart });\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n  \n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state));\n  }, [state]);\n  \n  // Add item to cart\n  const addToCart = (product, quantity = 1, selectedSize, selectedColor) => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: { product, quantity, selectedSize, selectedColor },\n    });\n  };\n  \n  // Remove item from cart\n  const removeFromCart = (index) => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: { index },\n    });\n  };\n  \n  // Update item quantity\n  const updateQuantity = (index, quantity) => {\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: { index, quantity },\n    });\n  };\n  \n  // Clear cart\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n  };\n  \n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        addToCart,\n        removeFromCart,\n        updateQuantity,\n        clearCart,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Custom hook to use cart context\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}