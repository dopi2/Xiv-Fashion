{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\New folder\\\\src\\\\components\\\\TrueFocus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport '../styles/TrueFocus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrueFocus = ({\n  sentence = '',\n  manualMode = false,\n  blurAmount = 5,\n  borderColor = 'transparent',\n  animationDuration = 2,\n  pauseBetweenAnimations = 1\n}) => {\n  _s();\n  const [isAnimating, setIsAnimating] = useState(!manualMode);\n  const [currentCharIndex, setCurrentCharIndex] = useState(-1);\n  const characters = sentence.split('');\n  useEffect(() => {\n    if (!manualMode) {\n      let interval;\n      let timeout;\n      const startAnimation = () => {\n        let index = -1;\n        setIsAnimating(true);\n        interval = setInterval(() => {\n          index++;\n          if (index >= characters.length) {\n            clearInterval(interval);\n            setCurrentCharIndex(-1);\n            setIsAnimating(false);\n\n            // Pause before restarting animation\n            timeout = setTimeout(() => {\n              startAnimation();\n            }, pauseBetweenAnimations * 1000);\n          } else {\n            setCurrentCharIndex(index);\n          }\n        }, animationDuration * 1000 / characters.length);\n      };\n      startAnimation();\n      return () => {\n        clearInterval(interval);\n        clearTimeout(timeout);\n      };\n    }\n  }, [manualMode, characters, animationDuration, pauseBetweenAnimations]);\n  const handleManualFocus = index => {\n    if (manualMode) {\n      setCurrentCharIndex(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"true-focus-container\",\n    style: {\n      border: `1px solid ${borderColor}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"true-focus-text\",\n      children: characters.map((char, index) => /*#__PURE__*/_jsxDEV(motion.span, {\n        className: `true-focus-char ${currentCharIndex === index ? 'focused' : ''}`,\n        animate: {\n          filter: currentCharIndex === index ? 'blur(0px)' : `blur(${blurAmount}px)`,\n          scale: currentCharIndex === index ? 1.1 : 1\n        },\n        transition: {\n          duration: 0.3\n        },\n        onClick: () => handleManualFocus(index),\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TrueFocus, \"UdFsMesUTlSOpdS93Nfg/FN51cI=\");\n_c = TrueFocus;\nexport default TrueFocus;\nvar _c;\n$RefreshReg$(_c, \"TrueFocus\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","TrueFocus","sentence","manualMode","blurAmount","borderColor","animationDuration","pauseBetweenAnimations","_s","isAnimating","setIsAnimating","currentCharIndex","setCurrentCharIndex","characters","split","interval","timeout","startAnimation","index","setInterval","length","clearInterval","setTimeout","clearTimeout","handleManualFocus","className","style","border","children","map","char","span","animate","filter","scale","transition","duration","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/New folder/src/components/TrueFocus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport '../styles/TrueFocus.css';\n\nconst TrueFocus = ({\n  sentence = '',\n  manualMode = false,\n  blurAmount = 5,\n  borderColor = 'transparent',\n  animationDuration = 2,\n  pauseBetweenAnimations = 1\n}) => {\n  const [isAnimating, setIsAnimating] = useState(!manualMode);\n  const [currentCharIndex, setCurrentCharIndex] = useState(-1);\n  const characters = sentence.split('');\n\n  useEffect(() => {\n    if (!manualMode) {\n      let interval;\n      let timeout;\n\n      const startAnimation = () => {\n        let index = -1;\n        setIsAnimating(true);\n\n        interval = setInterval(() => {\n          index++;\n          if (index >= characters.length) {\n            clearInterval(interval);\n            setCurrentCharIndex(-1);\n            setIsAnimating(false);\n            \n            // Pause before restarting animation\n            timeout = setTimeout(() => {\n              startAnimation();\n            }, pauseBetweenAnimations * 1000);\n          } else {\n            setCurrentCharIndex(index);\n          }\n        }, (animationDuration * 1000) / characters.length);\n      };\n\n      startAnimation();\n\n      return () => {\n        clearInterval(interval);\n        clearTimeout(timeout);\n      };\n    }\n  }, [manualMode, characters, animationDuration, pauseBetweenAnimations]);\n\n  const handleManualFocus = (index) => {\n    if (manualMode) {\n      setCurrentCharIndex(index);\n    }\n  };\n\n  return (\n    <div \n      className=\"true-focus-container\"\n      style={{ border: `1px solid ${borderColor}` }}\n    >\n      <div className=\"true-focus-text\">\n        {characters.map((char, index) => (\n          <motion.span\n            key={index}\n            className={`true-focus-char ${currentCharIndex === index ? 'focused' : ''}`}\n            animate={{\n              filter: currentCharIndex === index ? 'blur(0px)' : `blur(${blurAmount}px)`,\n              scale: currentCharIndex === index ? 1.1 : 1,\n            }}\n            transition={{ duration: 0.3 }}\n            onClick={() => handleManualFocus(index)}\n          >\n            {char}\n          </motion.span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TrueFocus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}